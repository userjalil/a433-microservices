item-db  | about to fork child process, waiting until server is ready for connections.
item-db  | forked process: 28
item-db  | 2023-05-25T15:47:14.949+0000 I CONTROL  [main] ***** SERVER RESTARTED *****
item-db  | 2023-05-25T15:47:14.954+0000 I CONTROL  [initandlisten] MongoDB starting : pid=28 port=27017 dbpath=/data/db 64-bit host=a92fd59ed61b
item-db  | 2023-05-25T15:47:14.954+0000 I CONTROL  [initandlisten] db version v3.6.23
item-db  | 2023-05-25T15:47:14.954+0000 I CONTROL  [initandlisten] git version: d352e6a4764659e0d0350ce77279de3c1f243e5c
item-db  | 2023-05-25T15:47:14.954+0000 I CONTROL  [initandlisten] OpenSSL version: OpenSSL 1.0.2g  1 Mar 2016
item-db  | 2023-05-25T15:47:14.954+0000 I CONTROL  [initandlisten] allocator: tcmalloc
item-db  | 2023-05-25T15:47:14.954+0000 I CONTROL  [initandlisten] modules: none
item-db  | 2023-05-25T15:47:14.954+0000 I CONTROL  [initandlisten] build environment:
item-db  | 2023-05-25T15:47:14.954+0000 I CONTROL  [initandlisten]     distmod: ubuntu1604
item-db  | 2023-05-25T15:47:14.954+0000 I CONTROL  [initandlisten]     distarch: x86_64
item-db  | 2023-05-25T15:47:14.954+0000 I CONTROL  [initandlisten]     target_arch: x86_64
item-db  | 2023-05-25T15:47:14.954+0000 I CONTROL  [initandlisten] options: { net: { bindIp: "127.0.0.1", port: 27017, ssl: { mode: "disabled" } }, processManagement: { fork: true, pidFilePath: "/tmp/docker-entrypoint-temp-mongod.pid" }, systemLog: { destination: "file", logAppend: true, path: "/proc/1/fd/1" } }
item-db  | 2023-05-25T15:47:14.954+0000 I STORAGE  [initandlisten] 
item-db  | 2023-05-25T15:47:14.955+0000 I STORAGE  [initandlisten] ** WARNING: Using the XFS filesystem is strongly recommended with the WiredTiger storage engine
item-db  | 2023-05-25T15:47:14.955+0000 I STORAGE  [initandlisten] **          See http://dochub.mongodb.org/core/prodnotes-filesystem
item-db  | 2023-05-25T15:47:14.955+0000 I STORAGE  [initandlisten] wiredtiger_open config: create,cache_size=3431M,cache_overflow=(file_max=0M),session_max=20000,eviction=(threads_min=4,threads_max=4),config_base=false,statistics=(fast),compatibility=(release="3.0",require_max="3.0"),log=(enabled=true,archive=true,path=journal,compressor=snappy),file_manager=(close_idle_time=100000),statistics_log=(wait=0),verbose=(recovery_progress),
item-db  | 2023-05-25T15:47:15.368+0000 I STORAGE  [initandlisten] WiredTiger message [1685029635:368716][28:0x7ff20a727a40], txn-recover: Set global recovery timestamp: 0
item-db  | 2023-05-25T15:47:15.411+0000 I CONTROL  [initandlisten] 
item-db  | 2023-05-25T15:47:15.411+0000 I CONTROL  [initandlisten] ** WARNING: Access control is not enabled for the database.
item-db  | 2023-05-25T15:47:15.411+0000 I CONTROL  [initandlisten] **          Read and write access to data and configuration is unrestricted.
item-db  | 2023-05-25T15:47:15.411+0000 I CONTROL  [initandlisten] 
item-db  | 2023-05-25T15:47:15.411+0000 I CONTROL  [initandlisten] 
item-db  | 2023-05-25T15:47:15.411+0000 I CONTROL  [initandlisten] ** WARNING: /sys/kernel/mm/transparent_hugepage/enabled is 'always'.
item-db  | 2023-05-25T15:47:15.411+0000 I CONTROL  [initandlisten] **        We suggest setting it to 'never'
item-db  | 2023-05-25T15:47:15.411+0000 I CONTROL  [initandlisten] 
item-db  | 2023-05-25T15:47:15.411+0000 I STORAGE  [initandlisten] createCollection: admin.system.version with provided UUID: 6ac41bf3-c8b9-43f7-bc1c-cf65d6f102ce
item-db  | 2023-05-25T15:47:15.428+0000 I COMMAND  [initandlisten] setting featureCompatibilityVersion to 3.6
item-db  | 2023-05-25T15:47:15.428+0000 I STORAGE  [initandlisten] createCollection: local.startup_log with generated UUID: c61023dd-a245-4125-a246-72c53cf0c4a7
item-db  | 2023-05-25T15:47:15.443+0000 I FTDC     [initandlisten] Initializing full-time diagnostic data capture with directory '/data/db/diagnostic.data'
item-db  | 2023-05-25T15:47:15.444+0000 I NETWORK  [initandlisten] listening via socket bound to 127.0.0.1
item-db  | 2023-05-25T15:47:15.444+0000 I STORAGE  [LogicalSessionCacheRefresh] createCollection: config.system.sessions with generated UUID: 09dcd526-1d43-4fc5-b91d-2584694e7c02
item-db  | 2023-05-25T15:47:15.444+0000 I NETWORK  [initandlisten] listening via socket bound to /tmp/mongodb-27017.sock
item-db  | 2023-05-25T15:47:15.444+0000 I NETWORK  [initandlisten] waiting for connections on port 27017
item-db  | child process started successfully, parent exiting
item-db  | 2023-05-25T15:47:15.468+0000 I INDEX    [LogicalSessionCacheRefresh] build index on: config.system.sessions properties: { v: 2, key: { lastUse: 1 }, name: "lsidTTLIndex", ns: "config.system.sessions", expireAfterSeconds: 1800 }
item-db  | 2023-05-25T15:47:15.468+0000 I INDEX    [LogicalSessionCacheRefresh] 	 building index using bulk method; build may temporarily use up to 500 megabytes of RAM
item-db  | 2023-05-25T15:47:15.468+0000 I INDEX    [LogicalSessionCacheRefresh] build index done.  scanned 0 total records. 0 secs
item-db  | 2023-05-25T15:47:15.480+0000 I NETWORK  [listener] connection accepted from 127.0.0.1:46268 #1 (1 connection now open)
item-db  | 2023-05-25T15:47:15.481+0000 I NETWORK  [conn1] received client metadata from 127.0.0.1:46268 conn1: { application: { name: "MongoDB Shell" }, driver: { name: "MongoDB Internal Client", version: "3.6.23" }, os: { type: "Linux", name: "Ubuntu", architecture: "x86_64", version: "16.04" } }
item-db  | 2023-05-25T15:47:15.484+0000 I NETWORK  [conn1] end connection 127.0.0.1:46268 (0 connections now open)
item-db  | 2023-05-25T15:47:15.521+0000 I NETWORK  [listener] connection accepted from 127.0.0.1:46270 #2 (1 connection now open)
item-db  | 2023-05-25T15:47:15.522+0000 I NETWORK  [conn2] received client metadata from 127.0.0.1:46270 conn2: { application: { name: "MongoDB Shell" }, driver: { name: "MongoDB Internal Client", version: "3.6.23" }, os: { type: "Linux", name: "Ubuntu", architecture: "x86_64", version: "16.04" } }
item-db  | 2023-05-25T15:47:15.532+0000 I STORAGE  [conn2] createCollection: admin.system.users with generated UUID: 76b901fe-4489-4cfb-bb73-63fb45650ea8
item-db  | Successfully added user: {
item-db  | 	"user" : "root",
item-db  | 	"roles" : [
item-db  | 		{
item-db  | 			"role" : "root",
item-db  | 			"db" : "admin"
item-db  | 		}
item-db  | 	]
item-db  | }
item-db  | 2023-05-25T15:47:15.558+0000 E -        [main] Error saving history file: FileOpenFailed: Unable to open() file /home/mongodb/.dbshell: No such file or directory
item-db  | 2023-05-25T15:47:15.559+0000 I NETWORK  [conn2] end connection 127.0.0.1:46270 (0 connections now open)
item-db  | 
item-db  | /usr/local/bin/docker-entrypoint.sh: ignoring /docker-entrypoint-initdb.d/*
item-db  | 
item-db  | 2023-05-25T15:47:15.567+0000 I CONTROL  [main] ***** SERVER RESTARTED *****
item-db  | killing process with pid: 28
item-db  | 2023-05-25T15:47:15.569+0000 I CONTROL  [signalProcessingThread] got signal 15 (Terminated), will terminate after current cmd ends
item-db  | 2023-05-25T15:47:15.570+0000 I NETWORK  [signalProcessingThread] shutdown: going to close listening sockets...
item-db  | 2023-05-25T15:47:15.570+0000 I NETWORK  [signalProcessingThread] removing socket file: /tmp/mongodb-27017.sock
item-db  | 2023-05-25T15:47:15.570+0000 I FTDC     [signalProcessingThread] Shutting down full-time diagnostic data capture
item-db  | 2023-05-25T15:47:15.570+0000 I STORAGE  [signalProcessingThread] WiredTigerKVEngine shutting down
item-db  | 2023-05-25T15:47:15.637+0000 I STORAGE  [signalProcessingThread] shutdown: removing fs lock...
item-db  | 2023-05-25T15:47:15.637+0000 I CONTROL  [signalProcessingThread] now exiting
item-db  | 2023-05-25T15:47:15.637+0000 I CONTROL  [signalProcessingThread] shutting down with code:0
item-db  | 
item-db   | MongoDB init process complete; ready for start up.
item-app  | 
item-app  | > docker-software-delivery@1.0.0 start /app
item-app  | > node ./bin/www
item-app  | 
item-app  | NODE_ENV: production
item-app  | /app/node_modules/mongodb/lib/mongo_client.js:421
item-app  |           throw err
item-app  |           ^
item-app  | 
item-app  | AssertionError [ERR_ASSERTION]: null == Error [MongoError]: failed to connect to server [item-db:27017] on first connect [Error: connect ECONNREFUSED 172.25.0.2:27017
item-app  |     at TCPConnectWrap.afterConnect [as oncomplete] (net.js:1159:16) {
item-app  |   name: 'MongoError'
item-app  | }]
item-app  |     at Pool.<anonymous> (/app/node_modules/mongodb-core/lib/topologies/server.js:336:35)
item-app  |     at Pool.emit (events.js:400:28)
item-app  |     at Connection.<anonymous> (/app/node_modules/mongodb-core/lib/connection/pool.js:280:12)
item-app  |     at Object.onceWrapper (events.js:520:26)
item-app  |     at Connection.emit (e...
item-app  |     at /app/app.js:24:10
item-app  |     at connectCallback (/app/node_modules/mongodb/lib/mongo_client.js:527:5)
item-app  |     at /app/node_modules/mongodb/lib/mongo_client.js:418:11
item-app  |     at processTicksAndRejections (internal/process/task_queues.js:77:11) {
item-app  |   generatedMessage: true,
item-app  |   code: 'ERR_ASSERTION',
item-app  |   actual: null,
item-app  |   expected: Error [MongoError]: failed to connect to server [item-db:27017] on first connect [Error: connect ECONNREFUSED 172.25.0.2:27017
item-app  |       at TCPConnectWrap.afterConnect [as oncomplete] (net.js:1159:16) {
item-app  |     name: 'MongoError'
item-app  |   }]
item-app  |       at Pool.<anonymous> (/app/node_modules/mongodb-core/lib/topologies/server.js:336:35)
item-db   | 
item-db   | 2023-05-25T15:47:16.583+0000 I CONTROL  [initandlisten] MongoDB starting : pid=1 port=27017 dbpath=/data/db 64-bit host=a92fd59ed61b
item-db   | 2023-05-25T15:47:16.583+0000 I CONTROL  [initandlisten] db version v3.6.23
item-db   | 2023-05-25T15:47:16.583+0000 I CONTROL  [initandlisten] git version: d352e6a4764659e0d0350ce77279de3c1f243e5c
item-db   | 2023-05-25T15:47:16.583+0000 I CONTROL  [initandlisten] OpenSSL version: OpenSSL 1.0.2g  1 Mar 2016
item-db   | 2023-05-25T15:47:16.583+0000 I CONTROL  [initandlisten] allocator: tcmalloc
item-db   | 2023-05-25T15:47:16.583+0000 I CONTROL  [initandlisten] modules: none
item-db   | 2023-05-25T15:47:16.583+0000 I CONTROL  [initandlisten] build environment:
item-db   | 2023-05-25T15:47:16.583+0000 I CONTROL  [initandlisten]     distmod: ubuntu1604
item-db   | 2023-05-25T15:47:16.583+0000 I CONTROL  [initandlisten]     distarch: x86_64
item-db   | 2023-05-25T15:47:16.583+0000 I CONTROL  [initandlisten]     target_arch: x86_64
item-db   | 2023-05-25T15:47:16.583+0000 I CONTROL  [initandlisten] options: { net: { bindIpAll: true }, security: { authorization: "enabled" } }
item-db   | 2023-05-25T15:47:16.583+0000 I -        [initandlisten] Detected data files in /data/db created by the 'wiredTiger' storage engine, so setting the active storage engine to 'wiredTiger'.
item-db   | 2023-05-25T15:47:16.583+0000 I STORAGE  [initandlisten] 
item-db   | 2023-05-25T15:47:16.583+0000 I STORAGE  [initandlisten] ** WARNING: Using the XFS filesystem is strongly recommended with the WiredTiger storage engine
item-db   | 2023-05-25T15:47:16.583+0000 I STORAGE  [initandlisten] **          See http://dochub.mongodb.org/core/prodnotes-filesystem
item-db   | 2023-05-25T15:47:16.583+0000 I STORAGE  [initandlisten] wiredtiger_open config: create,cache_size=3431M,cache_overflow=(file_max=0M),session_max=20000,eviction=(threads_min=4,threads_max=4),config_base=false,statistics=(fast),compatibility=(release="3.0",require_max="3.0"),log=(enabled=true,archive=true,path=journal,compressor=snappy),file_manager=(close_idle_time=100000),statistics_log=(wait=0),verbose=(recovery_progress),
item-db   | 2023-05-25T15:47:17.116+0000 I STORAGE  [initandlisten] WiredTiger message [1685029637:116698][1:0x7fdadb555a40], txn-recover: Main recovery loop: starting at 1/26880
item-db   | 2023-05-25T15:47:17.179+0000 I STORAGE  [initandlisten] WiredTiger message [1685029637:179425][1:0x7fdadb555a40], txn-recover: Recovering log 1 through 2
item-db   | 2023-05-25T15:47:17.218+0000 I STORAGE  [initandlisten] WiredTiger message [1685029637:218456][1:0x7fdadb555a40], txn-recover: Recovering log 2 through 2
item-db   | 2023-05-25T15:47:17.249+0000 I STORAGE  [initandlisten] WiredTiger message [1685029637:249258][1:0x7fdadb555a40], txn-recover: Set global recovery timestamp: 0
item-db   | 2023-05-25T15:47:17.284+0000 I CONTROL  [initandlisten] 
item-db   | 2023-05-25T15:47:17.284+0000 I CONTROL  [initandlisten] ** WARNING: /sys/kernel/mm/transparent_hugepage/enabled is 'always'.
item-db   | 2023-05-25T15:47:17.284+0000 I CONTROL  [initandlisten] **        We suggest setting it to 'never'
item-db   | 2023-05-25T15:47:17.284+0000 I CONTROL  [initandlisten] 
item-db   | 2023-05-25T15:47:17.286+0000 I FTDC     [initandlisten] Initializing full-time diagnostic data capture with directory '/data/db/diagnostic.data'
item-db   | 2023-05-25T15:47:17.287+0000 I NETWORK  [initandlisten] listening via socket bound to 0.0.0.0
item-db   | 2023-05-25T15:47:17.287+0000 I NETWORK  [initandlisten] listening via socket bound to /tmp/mongodb-27017.sock
item-db   | 2023-05-25T15:47:17.287+0000 I NETWORK  [initandlisten] waiting for connections on port 27017
item-db   | 2023-05-25T15:47:19.171+0000 I NETWORK  [listener] connection accepted from 172.25.0.3:35080 #1 (1 connection now open)
item-db   | 2023-05-25T15:47:19.179+0000 I NETWORK  [conn1] received client metadata from 172.25.0.3:35080 conn1: { driver: { name: "nodejs", version: "2.2.36" }, os: { type: "Linux", name: "linux", architecture: "x64", version: "5.10.16.3-microsoft-standard-WSL2" }, platform: "Node.js v14.21.3, LE, mongodb-core: 2.1.20" }
item-app  |       at Pool.emit (events.js:400:28)
item-app  |       at Connection.<anonymous> (/app/node_modules/mongodb-core/lib/connection/pool.js:280:12)
item-app  |       at Object.onceWrapper (events.js:520:26)
item-app  |       at Connection.emit (events.js:400:28)
item-app  |       at Socket.<anonymous> (/app/node_modules/mongodb-core/lib/connection/connection.js:189:49)
item-app  |       at Object.onceWrapper (events.js:520:26)
item-app  |       at Socket.emit (events.js:400:28)
item-app  |       at emitErrorNT (internal/streams/destroy.js:106:8)
item-app  |       at emitErrorCloseNT (internal/streams/destroy.js:74:3),
item-app  |   operator: '=='
item-app  | }
item-app  | npm ERR! code ELIFECYCLE
item-app  | npm ERR! errno 1
item-app  | npm ERR! docker-software-delivery@1.0.0 start: `node ./bin/www`
item-app  | npm ERR! Exit status 1
item-app  | npm ERR! 
item-app  | npm ERR! Failed at the docker-software-delivery@1.0.0 start script.
item-app  | npm ERR! This is probably not a problem with npm. There is likely additional logging output above.
item-app  | 
item-app  | npm ERR! A complete log of this run can be found in:
item-app  | npm ERR!     /root/.npm/_logs/2023-05-25T15_47_16_775Z-debug.log
item-app  | 
item-app  | > docker-software-delivery@1.0.0 start /app
item-app  | > node ./bin/www
item-app  | 
item-app  | NODE_ENV: production
item-app  | Connected to database
